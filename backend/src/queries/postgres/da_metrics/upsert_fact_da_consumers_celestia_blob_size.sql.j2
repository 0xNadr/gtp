{#
    Insert or update records into the 'fact_da_consumers' table. This query computes the sum of 'blob_sizes' from the 'celestia_tx' table.
    It extracts the blob sizes from the 'blob_sizes' json column and the 'da_consumer_id' from the 'namespaces' json column.
    
    Parameters:
    - days: default = 7; The time interval (in days) to consider for the data extraction. This will be dynamically injected into the query via Jinja2 templating.
#}

INSERT INTO fact_da_consumers (date, da_layer, da_consumer_id, metric_key, value)

SELECT
    date_trunc('day', block_timestamp) AS date, 
    'da_celestia' as da_layer,
    da_consumer_id,
    'blob_size_bytes' as metric_key,
    sum(blob_sizes) AS value
FROM (
    SELECT 
        tx_hash, 
        block_timestamp, 
        jsonb_array_elements(blob_sizes::jsonb)::numeric AS blob_sizes,
        trim('"' FROM jsonb_array_elements(namespaces::jsonb)::text) AS da_consumer_id
    FROM celestia_tx
    WHERE 
        block_timestamp > date_trunc('day', now()) - interval '{{ days | default (7) }} days'  -- Dynamic time interval
        AND block_timestamp < date_trunc('day', now())
        AND "action" = 'celestia.blob.v1.MsgPayForBlobs'
) AS subquery
GROUP BY 1,2,3,4
ORDER BY 1 DESC

ON CONFLICT (date, da_layer, da_consumer_id, metric_key)  
DO UPDATE SET 
    value = EXCLUDED.value;