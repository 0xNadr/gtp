{#
    Takes NEW records from 'oli_label_pool_bronze' converts them and adds them to the 'oli_label_pool_silver' table. 

    Parameters:
    - time_created: default = 0; Only consider attestations (including revokations) newer than that time (int: Unix Timestamp).
#}

{% set time_created = time_created | default(0) %}

INSERT INTO oli_label_pool_silver (
    id,
    chain_id,
    address,
    tag_id,
    tag_value,
    attester,
    time_created,
    revocation_time,
    revoked,
    is_offchain
)
WITH base_data AS (
    SELECT
        id,
        attester, 
        recipient,
        time_created,
        revocation_time,
        revoked,
        is_offchain,
        ( -- Extract chain_id
            SELECT value->>'value' 
            FROM jsonb_array_elements(decoded_data_json::jsonb) 
            WHERE value->>'name' = 'chain_id'
        )::jsonb->>'value' AS chain_id,
        ( -- Extract tags_json as a JSON string
            SELECT value->>'value' 
            FROM jsonb_array_elements(decoded_data_json::jsonb) 
            WHERE value->>'name' = 'tags_json'
        )::jsonb->>'value' AS tags_json_string
    FROM 
        public.oli_label_pool_bronze
    WHERE 
        time_created > {{ time_created }}
        OR revocation_time > {{ time_created }}
),
tags_expanded AS (
    SELECT 
        id,
        chain_id,
        recipient AS address,
        tag_entry.key AS tag_id,
        trim(BOTH '"' FROM tag_entry.value::text) AS tag_value,
        attester, 
        time_created,
        revocation_time,
        revoked,
        is_offchain
    FROM 
        base_data,
        jsonb_each(tags_json_string::jsonb) AS tag_entry
)
SELECT 
    id,
    chain_id,
    address,
    tag_id,
    tag_value,
    attester,
    time_created,
    revocation_time,
    revoked,
    is_offchain
FROM tags_expanded
ON CONFLICT (id, tag_id) DO UPDATE SET 
    tag_value = EXCLUDED.tag_value,
    attester = EXCLUDED.attester,
    time_created = EXCLUDED.time_created,
    revocation_time = EXCLUDED.revocation_time,
    revoked = EXCLUDED.revoked,
    is_offchain = EXCLUDED.is_offchain;