{#
    Get all attestations from untrusted attesters that have a owner_project tag from the label pool. Used to double check via airtable.
    - Filters out revoked attestations
    - Filters out tag_ids that are not contract_name, owner_project, usage_category
    - Filters attestations to only include ones from untrusted entities

    Parameters:
    - trusted_entities: An sql vlaue list of trusted entities (use function df_to_postgres_values)
    - time: time_created, default = 0; Only consider attestations newer than that time (int: Unix Timestamp).
#}

{% set time_created = time_created | default(0) %}

WITH filtered_labels AS (
  SELECT 
    id, chain_id, address, tag_id, tag_value, attester, time_created
  FROM 
    public.oli_label_pool_silver
  WHERE 
    -- attester NOT IN (SELECT attester FROM oli_trusted_entities)
    attester != decode('A725646C05E6BB813D98C5ABB4E72DF4BCF00B56', 'hex') -- growthepie.attest
    AND chain_id IN (SELECT caip2 FROM sys_chains)
    AND revoked = FALSE
    AND tag_id IN ('contract_name', 'owner_project', 'usage_category')
    AND time_created > {{ time_created }}
),

pivoted_data AS (
  SELECT
    (array_agg(address))[1] AS address,
    (array_agg(attester))[1] AS attester,
    MAX(chain_id) AS chain_id,
    MAX(CASE WHEN tag_id = 'contract_name' THEN tag_value END) AS contract_name,
    MAX(CASE WHEN tag_id = 'owner_project' THEN tag_value END) AS owner_project,
    MAX(CASE WHEN tag_id = 'usage_category' THEN tag_value END) AS usage_category
  FROM 
    filtered_labels
  GROUP BY 
    id
)

SELECT * FROM pivoted_data
WHERE owner_project IS NOT NULL;