{#
    A query to sum the data posted (blob_size_bytes) by DA consumers over a certain time interval.

    Parameters:
    - days: default = 30; The time interval (in days) to consider for data extraction.
    - da_layer: The DA layer to consider for data extraction. Can also be 'all' to consider all DA layers.
    - limit: default = 10; The maximum number of rows to return.
#}

{% set days = days | default(7) %}
{% set da_layer = da_layer | default('all') %}
{% set limit = limit | default(10) %}


{% if da_layer == "da_ethereum_blobs" %}
    {% set metric_key = "= 'ethereum_blob_size_bytes'" %}
{% elif da_layer == "da_celestia" %}
    {% set metric_key = "= 'celestia_blob_size_bytes'" %}
{% elif da_layer == "da_eigenda" %}
    {% set metric_key = "= 'eigenda_blob_size_bytes'" %}
{% else %}
    {% set metric_key = "in ('celestia_blob_size_bytes', 'ethereum_blob_size_bytes', 'eigenda_blob_size_bytes')" %}
{% endif %}

with econ_names as (
    SELECT 
        origin_key,
        max("name") as econ_name
    FROM sys_economics_mapping
    group by 1
)

select 
	origin_key as da_consumer_key,
	eco.econ_name as name,
    'NA' as da_layer,
	c.origin_key as gtp_origin_key,
	sum(value) as data_posted
FROM public.fact_kpis
left join econ_names eco using (origin_key)
left join sys_main_conf c using (origin_key)
where metric_key {{ metric_key }}
AND "date" >= current_date - INTERVAL '{{ days }} days' 
    AND "date" < current_date
group by 1,2,3,4
order by 5 desc
LIMIT {{ limit | default(10) }};